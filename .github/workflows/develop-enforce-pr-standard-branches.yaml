name: Branch Protection

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [develop]

permissions:
  statuses: write 

jobs:
  develop-source-branch-check:
    runs-on: ubuntu-latest
    outputs:
      branch_check_result: ${{ steps.check_source_branch.outputs.branch_check_result }}
    steps:
      - name: Check Source Branch
        id: check_source_branch
        timeout-minutes: 1
        run: |
          if [[ "${{ github.base_ref }}" != "develop" ]]; then
            echo "::set-output name=branch_check_result::success" # Neutral exit
          elif [[ ! "${{ github.head_ref }}" =~ ^(feature|hotfix)/[a-z0-9]+-ENG-[0-9]{5}-.*$ ]]; then
            echo "::error::Pull requests to 'develop' must originate from branches named 'feature/[a-z0-9]+-ENG-#####-*' or 'hotfix/[a-z0-9]+-ENG-#####-*'."
            echo "::set-output name=branch_check_result::failure"
          else
            echo "::set-output name=branch_check_result::success"
          fi

      - name: Update PR Status
        if: always() 
        uses: actions/github-script@v6
        with:
          script: |
            const branchCheckResult = "${{ fromJSON(steps.check_source_branch.outputs.branch_check_result) || 'failure' }}";
            const state = branchCheckResult === "success" ? "success" : "failure";
            const description = (
              state === "success"
                ? "Branch name check passed"
                : (branchCheckResult === 'failure' ? "Branch name check failed" : "Branch name check timed out")
            );

            github.rest.repos.createCommitStatus({
              ...context.repo,
              sha: context.payload.pull_request.head.sha,
              state: state,
              context: "Branch Protection",
              description: description
            });

