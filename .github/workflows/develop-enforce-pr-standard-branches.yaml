name: Branch Protection

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - develop  # Only monitor pull requests targeting the 'develop' branch

permissions:
  statuses: write # Grant write permission for commit statuses

jobs:
  develop-source-branch-check:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8
        with:
          protected_branches: |
            feature/*
        timeout-minutes: 2

      - name: Check Source Branch
        run: |
          # Check if target branch is not 'develop'
          if [[ "${{ github.base_ref }}" != "develop" ]]; then
            echo "This action only runs on pull requests targeting the 'develop' branch."
            exit 0 # Neutral exit
          fi

          # Check if source branch is not protected
          if [[ "${{ steps.branch-names.outputs.is_protected }}" == "false" ]]; then
            echo "::error::Pull requests to 'develop' must originate from branches named 'feature/[a-z0-9]+-ENG-#####-*' or 'hotfix/[a-z0-9]+-ENG-#####-*'."
            exit 1  # Failure exit
          fi

          echo "::set-output name=branch_check_result::success" # Set success output

      - name: Update PR Status
        uses: actions/github-script@v6
        with:
          script: |
            const branchCheckResult = "${{ steps.develop-source-branch-check.outputs.branch_check_result }}";
            const state = branchCheckResult === "success" ? "success" : "failure";
            const description = state === "success" ? "Branch name check passed" : "Branch name check failed";

            github.rest.repos.createCommitStatus({
              ...context.repo,
              sha: context.payload.pull_request.head.sha,
              state: state,
              context: "Branch Protection",
              description: description
            });
